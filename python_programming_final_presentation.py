# -*- coding: utf-8 -*-
"""Python Programming Final Presentation.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1XsnP_IEga0elusYzTyf7FlrUAqxOWhCT

# **Amazon Top 100 Electronics**

**ISBA 3730 - Programming for Business Applications**

Yonathan Amare, Victor Hurtado, Seamus Barrett, Rafael Salonikios


College of Business Administration

Loyola Marymount University

#**Executive Summary**

This report was made to guide our client, Smart Home Systems Inc, in order to figure out which product they should sell on Amazon in order to become one of the Top 100 selling electronics. First, we had questions that we wanted to answer through analyzing the data that gave us insights into what people were pruchasing and what products were succeeding. From there we cleaned the data and began analyzing our dataset. After we finished analyzing the data we were able to conclude what type of product, what features that product should have, the price point, and how reviews impacted the Top 100 product and gave all of this information to our clients so that they could make a decision on what type of product they want to sell.

#**Introduction**

We are four recent graduates from Loyola Marymount University who majored in Information Systems and Business Analytics. Right after graduation, the four of us started our own data analytics consulting firm, LM Consulting. One of our first clients, Smart Home Systems Inc, was a small tech start up that wanted to sell a new electronics product on Amazon. While Amazon sells the most electronics in the United States, our client wanted to know what kind products have the best chance to be successful and break into the Top 100 products.

Our primary business question that we decided we must answer for our client was, "What is the optimal product to make for Smart Home Systems Inc. to sell on Amazon, and what should the price be?"

To help our client and to answer our own main question, we wanted to answer some key supporting questions to find out what kind of product would be succesful on Amazon. We decided on some questions that would help us answer our big question. Some of these questions included, what was the most sold product? Which category was the most popular? What was the average cost? What's the most expensive and least expensive item? What ratings do these products get? and What is the minimum average rating necessary to secure a spot in the Top 100? We believe that these questions would give us valuable insights and a good understanding of what people are buying, price trends, and whether or not our client's product will succeed on Amazon.

This report will highlight how we analyzed the data to come up with our findings as well as the process that went through to arrive at our conclusion.

#**Main Content and Analysis**

##***Methodology***

##*IMPORTING DATA*

Our first step was importing the packages that we are going to use to analyze and present our data. The packages that were used to analyze our data were NumPy and Pandas and to present our findings we used Matplotlib.
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

"""The next step was to import our data set so we could begin analyzing it. We got our dataset from Kaggle.com as a CSV file. Our data shows the top 100 electronics products rankings on Amazon every day for 7 months in 2021. We realized that the NA values for the dataset are either "Not available" or "No customer reviews yet"
"""

df = pd.read_csv('AmazonTop100ElectronicsData.csv', na_values=['Not available', 'No customer reviews yet'])

df

"""We wanted to learn a little but about the dataset that we were working with. The data set is a table with 18,100 rows and 6 colums. The data set gives us a date at which this electronic product was given this number ranking, a number or the rank of sales on Amazon at that date, the product name, average customer rating, the number of reviews for each product, and the price."""

df.info()

df.describe()

"""Before we did any analysis of the data, we wanted to run the correlation function for the entire dataset. If there were a strongly positive or negative correlation between any of the columns, it would show here as a number close to either 1.0 or -1.0"""

df.corr()

"""As we can see from the df.corr() function, there are unfortunately no strong correlations between any of the columns as a whole. This makes our job more difficult, as we cannot advise our client that changing the price or improving the ratings will be guaranteed to impact the sales. However, we can break the product ratings and price down using deeper analysis to see if there are any trends or numbers they should be shooting for, and also we are able to analyze which products have historically been the most popular and use the data to make inferences as to why.

##*PRODUCT POPULARITY ANALYSIS*

Now it was time to start answering our questions. To begin, we wanted to find which electronics were the most popular to give our client an idea of what type of products they should be looking to manufacture. The widest scope of analysis we could do on this data was a value_counts function with all of the data included, to see which products appeared in the top 100 the most
"""

df['name'].value_counts()

"""The Blink Mini and Blink Outdoor security cameras were by far the products that most often appeared in the top 100 rankings

Next, to dive deeper, we wanted to find which product was most frequently ranked the top selling item. To do this, we sliced for all of the products ranked 1 in 'number' on any given day
"""

rankedfirst = df[df['number'] == 1]

"""
Here is how we found a list of the products that were the most often ranked #1 in the top 100:"""

productrankings = rankedfirst['name'].value_counts()
productrankings

"""We can use this data for a bar graph to show the client that the Amazon Fire Stick has dominated sales

Used this source off of Google to find the barh function https://zebrabi.com/guide/how-to-customize-horizontal-bar-chart-in-python-matplotlib/#:~:text=To%20create%20a%20horizontal%20bar,the%20categories%20and%20the%20values.&text=Here%2C%20categories%20are%20the%20labels,numerical%20values%20for%20each%20category.
"""

plt.barh(productrankings.index, productrankings.values)

plt.xlabel('Number of Occurrences')
plt.ylabel('Products')
plt.title('Number of Appearances at #1 by Each Electronic')

plt.show()

"""By this list, we can see the rankings of the products that have been ranked #1 within the time the data was collected. The Fire TV Stick is by far the most highly ranked product, with two of its variations accounting for 159 of the first ranked products, with all other electronics sold on Amazon only reaching the number one spot a combined 22 times

We also wanted to repeat this same process, but with products in the top 5 to see if there would be any differences in the results
"""

rankedtopfive = df[df['number'].isin([1, 2, 3, 4, 5])]

rankedtopfive['name'].value_counts()

"""This provides a lot more information, but the top few products are generally the same as the slice of the number one products, with the Fire TV stick in first once again

We also wanted to find out generally which types of products were making the list most frequently, and to do this we hypothesized that we could break the 'name' list or large strings into multiple smaller one word strings, and then take that list and search for the most commonly appearing words. We expected to find some unwanted repeating words that do not help our search, such as company names, but we figured that the process could still be valuable if it turns up some product types

Used chatGPT to help figure a good amount of this code out. https://chat.openai.com/share/49087020-955b-4abf-87e7-ac3ce4011eab
"""

wordsinname = df['name'].str.split()

wordsinnamelist = [word for wordlist in wordsinname for word in wordlist]

topwordhits = pd.Series(wordsinnamelist).value_counts()
topwordhits

"""Unfortunately this search turned up mostly useless words, but there could be value if we expanded this new variable to see more of the top words that have turned up"""

topwordhits.head(50)

"""This gives us some good information to provide to the clients. TVs, Cameras, Extension cords, Cables, and Speakers are some of the most common devices to show up on this list. Some of the most common features that seem to be in well-performing electronic products are HD, Bluetooth, Smart devices, Streaming, and Wireless.

##*PRODUCT PRICE ANALYSIS*

Our next question was,  what was the average cost?

We did not only want to provide our client with ideas for what product they should be looking to manufacture, but also at which price point that would have the best chance of maximizing sales.

Here is how we found the average cost:

first we had to drop the NA values so the 'price' column can be an float value and not an object
"""

df[['price', 'n_reviews', 'rating']].dropna(inplace=True)

"""We then had to drop the $ in the price column so we could be able to do calculations on the column, and convert it to a float

We had to use ChatGPT to find out how to remove the dollar sign. https://chat.openai.com/share/49087020-955b-4abf-87e7-ac3ce4011eab
"""

df['price'] = df['price'].replace('[\$,]', '', regex=True).astype('float')

df['price'].mean()

"""This shows that the mean price for all of the products in the top 100 in this time frame was $79.66

We were wondering whether the top 5 ranked products would have a different mean than the rest of the top 100, so we used the slice that we had created a slice for this different set of products and found the mean price of this slice
"""

rankedtopfive['price'] = rankedtopfive['price'].replace('[\$,]', '', regex=True).astype('float')

rankedtopfive['price'].mean()

"""This shows that the average price for a top five ranked product was significantly lower than the average price for the entire dataframe. At an average of 40.57, the average price was 39.09 lower for these products in the upper echelon of the rankings

Next, we wanted to find out what's the most expensive and least expensive item?

Here is how we found the most expensive items:
"""

df.sort_values(by='price', ascending=False)

"""Our results show that the Acer Predator Triton 500 gaming laptop was the most expensive product to crack the top 100 electronics, at $1625

Here is how we found the cheapest items:
"""

df.sort_values(by='price', ascending=True)

"""Our results show that the Sabrent 4-Port USB 2.0 Hub was the least expensive product to crack the top 100 electronics, at $1.50

These outliers show a wide range that a product can be priced at to make it into the top 100, with products appearing on the list with a price anywhere from 1.50 to 1625.00

We also could have used the .describe() function for some of these calculations, and it also shows us a number of other valuable statistics
"""

df.price.describe()

"""We have some crazy outliers in the data, such as 1.50 and 1625.00, but these statistics can show us where the large majority is. The 75% is at 99.99 and the 25% is at 18.99, and we would recommend that our client stay between those numbers"""

plt.scatter(number, price, color='purple', marker='o')

plt.xlabel('Number')
plt.ylabel('Price')
plt.title('Number vs Price')

plt.show()

"""This visualization shows that regardless of the number on the list, the prices of all of the products are generally pretty low.

##*PRODUCT RATINGS ANALYSIS*

We have done analysis to find the most popular products, and the price points at which they sell. Now, we also want to look at the reviews for these products. It could be helpful for our clients to have a benchmark goal to strive for in their customer reviews to tell them whether they can achieve the top 100 list

We first wanted to find the average product rating for all the products on the top 100.
"""

df['rating'].mean()

"""The average rating was found to be 4.62 out of 5 for electronics in the top 100

We again wanted to see if there would be a difference between the entire dataset, and the slice of products that had been ranked in the top 5
"""

rankedtopfive['rating'].mean()

"""The average rating for these products that were higher up on the list did increase, but surprisingly it was by a very incremental margin. The average rating was 4.66, only 0.04 higher than the overall average

We decided it would be worthwhile to find the lowest rating as well, so we could give the client a low benchmark that they should not let their product fall below in ratings if they want to maintain a successful product
"""

df.sort_values(by='rating', ascending=True)

"""We can see from this that remarkably it is possible to break Amazon's top 100 electronics list with a 1.0 rating. However, this is likely an anoymaly, as there is only one rating. The product was ranked at #5 with a 1.0 rating from one user, so it is reasonable to assume it was a new product. The next product on the list had a larger sample size with a 1.7 rating in 26 reviews. Despite the possibility of making the list with these low ratings, out of all 18,100 products, there are only 3 products that have made this list with a rating under 3.0, so we advise our client to keep their product rated over 3.0"""

price = df.price
rating = df.rating
number = df.number

plt.scatter(rating, price, color='red', marker='o')

plt.xlabel('Rating')
plt.ylabel('Price')
plt.title('Rating vs Price')

plt.show()

"""Here is a visualization to show that the majority of data points are priced lower and have higher ratings"""

plt.scatter(number, rating, color='pink', marker='^')

plt.xlabel('Number')
plt.ylabel('Rating')
plt.title('Number vs Rating')

plt.show()

"""This visualization shows that throughout the list, regardless of what number the products are on the list, the ratings are generally between 4.0 and 5.0

##***Findings, Interpretations, and Recommendations***

After analyzing the top 100 electronics products on Amazon, we found a lot of information that can guide Smart Home Systems Inc..

Here is what we found and what we recommend to our clients:

We first needed to answer our primary business question, "What is the optimal product to make for Smart Home Systems Inc. to sell on Amazon, and what should the price be?"

Our answer to this question is that Smart Home Systems Inc. should manufacture a universal TV remote.

The Amazon Fire Stick and Roku Universal Remote were two of the most popular products. This shows that streaming devices and accessories for TVs are super popular, which helps our clients. This suggests that manufacturing a product that is compatible with the Fire Stick TV Stick and Roku streaming devices could enhance our chances of breaking into the top 100. We believe that this would make a universal remote a great product, as anything that consumers would purchase with these two products would have the potential to make a lot of sales. Some of the most common words that were in the products were related to Voice assistance and Digital, so we would advise our clients to implement this into the remote to differentiate themselves and convince people to purchase their product instead of the other TV remotes that appear on the top 100 list.

We also wanted to advise them on price. The average price of all products in the top 100 was 79.66. However, the top 5 ranked products had an average price of 40.57. This trend shows that lower prices actually give a product more chance to be competitive on the sales rankings. We would advise our clients to try and sell their products below the average price of the top 5 ranked products at the 30 - 35 dollar range to remain competitive and set themselves apart from the other TV remotes on the market.

Almost all of the products in the top 100 had a high average rating. The average product rating for the top 100 was 4.62 stars out of 5. Products in the top 5 had an average rating of 4.66. It is possible to break the list with a product that has an averae ranking anywhere over 3.0, but these lower rated products on the list are outliers that tend to be kicked off the list in a shorter time period. We would recommend that our client makes a quality product that can maintain a rating from 4.5 - 4.7 to remain on the top 100 list and stay competitive. Another recommendation for our client is that they give incentives like a discount on their other products for leaving a rating on Amazon.

##***Biggest Challenges and What We Could've Done Differently***

After completing this project, we agreed that our biggest challenges were finding what portions of our project to visualize. We felt that we had a good amount of analysis done on the dataset to make valuable recommendations for our client, but that sometimes it was hard how to conceptualize how to show that in a graph or a plot.

If we could go back in time and complete this project again we would have done more research into how we can effectively visualize our recommendatins in an effective way to get our point across to the client. We pushed the project back a bit and the time crunch made it difficult to put enough time in to effectively overcome this problem, so in hindsight we definitely should have started earlier.

#**Summary and Conclusions**

In conclusion, our report was made to help Smart Home Systems Inc., a tech startup that wants to sell a new electronic product on Amazon. Our analysis focused on answering key questions on product popularity, average cost, and average ratings for the 100 most popular electronic items on Amazon. After answering our questions we were able to recommend Smart Home Systems Inc. on the best course of action.

Our final recommendation was that Smart Home Systems Inc. produce a smart remote that would be compatible with the Amazon Fire Stick and Roku Products. We recommend that they price it in the 30 - 35 dollar range, equip it with voice assistance capabilities, and make sure it is of high enough quality to maintain reviews between 4.5 - 4.7. Based on all of our analysis, this product would have an extremely high likelihood of achieving a spot in the top 100 and maintaining that spot for a long period of time.

#**Bibliography**

https://ecommercedb.com/ranking/stores/ww/consumer-electronics?page=1&pagesize=50&specialist=all&currency=USD

https://chat.openai.com/share/49087020-955b-4abf-87e7-ac3ce4011eab

https://zebrabi.com/guide/how-to-customize-horizontal-bar-chart-in-python-matplotlib/#:~:text=To%20create%20a%20horizontal%20bar,the%20categories%20and%20the%20values.&text=Here%2C%20categories%20are%20the%20labels,numerical%20values%20for%20each%20category.

#**Appendices**

https://www.kaggle.com/datasets/annpastushko/amazon-top-100-best-sellers-in-electronics-2021
"""